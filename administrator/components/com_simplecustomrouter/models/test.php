<?php
/**
 * @copyright	Copyright (C) 2012 Daniel Calvi침o S치nchez
 * @copyright	Copyright (C) 2014 Daniel Calvi침o S치nchez
 * @license		GNU Affero General Public License version 3 or later; see LICENSE.txt
 */

defined('_JEXEC') or die;

require_once JPATH_PLUGINS.'/system/simplecustomrouter/simplecustomrouter.php';

/**
 * Model to test routes.
 * A path or query can be tested against the configured routes to see which
 * query or path will be generated.
 * 
 * Note that only the Simple Custom Router plugin is taken into account; the
 * general Joomla router or other routes added to it are ignored. The idea is to
 * use this test to check if a regular expression matches the expected values.
 * To test the real behaviour, that is, to test what happens when some path is
 * parsed or some query built... well, just check it in the real Joomla
 * frontend ;)
 * 
 * There are technical reasons for that, too. JURI stores the base URL, which is
 * set to the administrator URL, in a variable that can not be modified from
 * outside the class. Even if a site router is created in the model (which
 * requires tampering with JFactory, JRoute...), all the JURIs will use the
 * administrator URL as the base URL and the parsing and building would fail.
 */
class SimpleCustomRouterModelTest extends JModelLegacy {

    /**
     * Returns the query generated by the Simple Custom Router when parsing the
     * given path.
     * The given path may contain a query string appended after a '?'.
     * 
     * The Itemid request variable is backed up and restored to prevent it from
     * being modified by the parsing. 
     * 
     * @param string $path The path to parse.
     * @return string The generated query, if any.
     */
    public function testPath($path) {
        $queryStartPosition = strpos($path, '?');
        
        $uri = new JURI();
        if ($queryStartPosition === false) {
            $uri->setPath($path);
        } else {
            $uri->setPath(substr($path, 0, $queryStartPosition));
            $uri->setQuery(substr($path, $queryStartPosition + 1));
        }

        //Save current Itemid, if any
        $itemId = JFactory::getApplication()->input->get('Itemid');
        
        $siteRouter = null;
        $simpleCustomRouter = new SimpleCustomRouter();
        $simpleCustomRouter->parse($siteRouter, $uri);
        
        //Restore Itemid, as it could have been modified by the parsing
        JFactory::getApplication()->input->set('Itemid', $itemId);
        
        if ($uri->getPath() == '') {
            return $uri->getQuery();
        } else {
            return '';
        }
    }
    
    /**
     * Returns the path generated by the Simple Custom Router when building the
     * given query.
     * The query should not contain the leading '?'; it must be just the query
     * itself.
     * 
     * @param string $query The query to build.
     * @return string The generated path, if any.
     */
    public function testQuery($query) {
        $simpleCustomRouter = new SimpleCustomRouter();
        
        $uri = new JURI();
        $uri->setPath('index.php');
        $uri->setQuery($query);

        $siteRouter = null;
        $simpleCustomRouter->build($siteRouter, $uri);
        
        if ($uri->getPath() == 'index.php') {
            return '';
        } else if ($uri->getQuery() == '') { 
            return $uri->getPath();
        } else {
            return $uri->getPath().'?'.$uri->getQuery();
        }
    }
}
